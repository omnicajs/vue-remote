name: Tests

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  eslint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 18.x, 20.x ]

    steps:
      - name: Using branch ${{ github.ref }} for repository ${{ github.repository }}.
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: .yarn
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Run lint
        run: yarn lint
  
  tests:
    needs: eslint

    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [ 18.x, 20.x ]
    
    steps:
      - name: Using branch ${{ github.ref }} for repository ${{ github.repository }}.
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
    
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: .yarn
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}-yarn-

      - name: Install dependencies
        run: yarn install
        
      - name: Run jest tests
        run: yarn test:coverage
        
      - name: Upload coverage to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json
  
  e2e:
    needs: [eslint, tests]
    
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [ 18.x, 20.x ]
        
    steps:
    - name: Using branch ${{ github.ref }} for repository ${{ github.repository }}.
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: yarn install

    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: .yarn
        key: ${{ runner.OS }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-node-${{ matrix.node-version }}-yarn-
      
    - name: Install Playwright Browsers
      run: npx playwright install chromium firefox --with-deps
      
    - name: Build e2e example app
      run: yarn e2e:build
      
    - name: Run example app server
      run: nohup yarn e2e:serve &
      
    - name: Run e2e tests
      run: yarn e2e:test
         
    - name: Upload coverage to GitHub Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-e2e-${{ matrix.node-version }}
        path: coverage/

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/
      
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        